@model IEnumerable<NYCTaxiViewer.Models.TaxiTrip>

@{
    ViewData["Title"] = "Visualization";
}
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAutJPrKkRBj52-1zEfmk5FkeSIHJWnkUc"></script>
<script>
    var allTaxiTrips;
    var tripsAtTime;

    var examinedDate = '2016-01-02'
    var tripFilterTime = '00:10:00';

    function initMap(data) {

        console.log("INIT MAP CALLED!");

        console.log(data);

        var coordList=[];
        var center = { lat: 40.7230, lng: -74.0006 };

        var start = [];
        var end = [];

        var startString = [];
        var endString = [];

        for (var i = 0; i < data.length; i++) {
            var addingStartArray = [data[i].pickup_latitude, data[i].pickup_longitude];
            var addingEndArray = [data[i].dropoff_latitude, data[i].dropoff_longitude];

            var addingStartString = data[i].pickup_latitude + ',' + data[i].pickup_longitude;
            var addingEndString = data[i].dropoff_latitude + ',' + data[i].dropoff_longitude;

            start.push(addingStartArray);
            end.push(addingEndArray);

            startString.push(addingStartString);
            endString.push(addingEndString);
        }

        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 11,
            center: center,
            mapTypeId: 'terrain'
        });

        for(i=0;i<start.length;i++){
            var startMarkers = new google.maps.Marker({
                position: new google.maps.LatLng(start[i][0], start[i][1]),
                icon: 'https://people.rit.edu/bxc1712/markers/start.png',
                map: map,
                opacity: .5
            });
            var endMarkers = new google.maps.Marker({
                position: new google.maps.LatLng(end[i][0], end[i][1]),
                icon: 'https://people.rit.edu/bxc1712/markers/end.png',
                map: map,
                opacity: .5
            });
        }

        for(i=0;i<startString.length;i++){
            var startCoord=startString[i].split(',');
            var startPt=new google.maps.LatLng(startCoord[0],startCoord[1]);
            var endCoord=endString[i].split(',');
            var endPt=new google.maps.LatLng(endCoord[0],endCoord[1]);
            taxiRoute(startPt,endPt);
        }

        function taxiRoute(pickUp,dropOff){
            var routePath=new google.maps.Polyline({
                path:[pickUp,dropOff],
                geodesic:true,
                strokeColor: '#333333',
                strokeOpacity: .5,
                strokeWeight: 2
            });
            routePath.setMap(map);
        }
    }

    function getAllData() {
        $.ajax({
            url: "/TaxiTrips/GetAllJson",
            success: function (result) {
                allTaxiTrips = result;
                initMap(result);
            }
        }).done(function () {
        });
    }

    function getDataByTime(tripFilterTime) {
        $.ajax({
            url: "/TaxiTrips/GetTripsFiltered?cutoffEndInput=" + tripFilterTime,
            success: function (result) {
                tripsAtTime = result;
                initMap(result);
            }
        }).done(function () {
        });
    }

    function initControls() {
        $('#timeInput').val('00:10:00')

        updateControls();
    }

    function updateControls() {
        tripFilterInput = $('#timeInput').val(); //'00:10:00'

        tripFilterTime = examinedDate + ' ' + tripFilterInput;
        getDataByTime(tripFilterTime);
        console.log(tripFilterTime);
    }

</script>
<script>
    $(document).ready(function () {
        initControls();
        getDataByTime(tripFilterTime);
        //getAllData();
    });
</script>
<style>
    #map {
        height: 50%;
    }

    html, body {
        height: 100%;
    }

    label {
        display: block;
    }

    input.textinput {
        max-width: none;
        width: 430px;
    }
</style>

<h2>Visualization</h2>

<div id="map"></div>

<div class="controls">
    <h4>Viewing Trips Around: </h4>
    <label>HH:MM:SS</label>
    <label>Input Time: <input type="text" id="timeInput" class="textinput"/></label>
    <button id="updateButton" onclick="updateControls()">Update</button>
</div>
